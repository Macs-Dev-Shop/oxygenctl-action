name: 'Deploy app to Shopify Oxygen'
branding:
  icon: shopping-bag
  colour: green
description: 'Deploy JavaScript applications to Shopify Oxygen directly from GitHub'
inputs:
  build_command:
    description: The build command to execute; OXYGEN_ASSET_BASE_URL is available as a reference to Shopify's CDN for this command
    required: true
  commit_message:
    description: The message of the commit
    default: ${{ github.event.head_commit.message }}
    required: true
  commit_timestamp:
    description: The timestamp of the commit
    default: ${{ github.event.head_commit.timestamp }}
    required: true
  oxygen_deployment_token:
    description: The JWT deployment token
    required: true
  oxygen_worker_dir:
    description: The name of the directory containing the worker file
    default: dist/worker/
  oxygen_client_dir:
    description: The name of the directory with compiled client files
    default: dist/client/
  oxygen_health_check:
    description: Ensure the application is reachable on Oxygen marking deployment as successful? (`true` or `false`)
    default: false
  path:
    description: The root path of the project to deploy
outputs:
  url:
    description: URL of the deployment
    value: ${{ steps.oxygenctl-action.outputs.url || steps.oxygen-cli-action.outputs.url }}
runs:
  using: 'composite'
  steps:
    - name: Check for OxygenV2 token
      shell: 'bash'
      id: check_version
      run: |
        TOKEN="${{ inputs.oxygen_deployment_token }}"
        if [[ "$TOKEN" =~ ^[A-Za-z0-9+/]+[=]{0,2}$ ]]; then
          echo "IS_V2=true" >> $GITHUB_ENV
        else
          echo "IS_V2=false" >> $GITHUB_ENV
        fi

    - name: Build and Publish to Oxygen V2
      shell: 'bash'
      id: 'oxygen-cli-action'
      if: env.IS_V2 == 'true'
      run: |
        yarn global add @shopify/oxygen-cli@latest
        URL_OUTPUT=$(oxygen-cli oxygen:deploy \
          --rootPath=${{ inputs.path }} \
          --assetsFolder=${{ inputs.oxygen_client_dir }} \
          --workerFolder=${{ inputs.oxygen_worker_dir }})
        echo "url=$URL_OUTPUT" >> $GITHUB_OUTPUT
      env:
        OXYGEN_DEPLOYMENT_TOKEN: ${{ inputs.oxygen_deployment_token }}

    - name: Build and Publish to Oxygen V1
      shell: 'bash'
      id: 'oxygenctl-action'
      if: env.IS_V2 == 'false'
      env:
        OXYGEN_ASSETS_DIR: ${{ inputs.oxygen_client_dir }}
        OXYGEN_BUILD_COMMAND: ${{ inputs.build_command }}
        OXYGEN_COMMIT_MESSAGE: ${{ inputs.commit_message || 'No commit message' }}
        OXYGEN_DEPLOYMENT_TOKEN: ${{ inputs.oxygen_deployment_token }}
        OXYGEN_WORKFLOW_ID: "${{ github.run_id }}_${{ github.run_attempt }}"
        OXYGEN_WORKER_DIR: ${{ inputs.oxygen_worker_dir }}
      run: |
        [[ -n "${{ inputs.path }}" ]] && cd "${{ inputs.path }}";
        [[ -z "${{ inputs.commit_timestamp }}" ]] && export OXYGEN_COMMIT_TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ") || export OXYGEN_COMMIT_TIMESTAMP=${{ inputs.commit_timestamp }};
        echo "url=$($GITHUB_ACTION_PATH/oxygenctl deploy --health-check='${{ inputs.oxygen_health_check }}')" >> $GITHUB_OUTPUT
